{"version":3,"sources":["webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/layout/index.jsx","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/UserInfo/UserInfo.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/SocialLinks/SocialLinks.jsx","webpack:///./node_modules/core-js/modules/es6.function.bind.js","webpack:///./node_modules/core-js/modules/_bind.js","webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js"],"names":["Component","PostTemplate","render","slug","this","props","pageContext","postNode","data","markdownRemark","post","frontmatter","id","category_id","config","postDefaultCategoryID","react_default","a","createElement","layout","Helmet_default","title","siteTitle","SEO","postPath","postSEO","dangerouslySetInnerHTML","__html","html","className","PostTags","tags","SocialLinks","UserInfo","React","pageQuery","module","exports","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","dateFromFormat","dateFormat","userName","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","MainLayout","children","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","name","content","description","image","postURL","_this$props","postMeta","excerpt","cover","publicURL","urljoin","blogURL","schemaOrgJSONLD","@context","@type","alternateName","push","itemListElement","position","item","@id","headline","type","JSON","stringify","property","expanded","react_twitter_widgets__WEBPACK_IMPORTED_MODULE_2__","username","options","count","react__WEBPACK_IMPORTED_MODULE_3___default","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_4__","key","style","textDecoration","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2___default","mobile","iconSize","renderShareCount","filter","react_share__WEBPACK_IMPORTED_MODULE_2__","react_share__WEBPACK_IMPORTED_MODULE_3__","round","size","react_share__WEBPACK_IMPORTED_MODULE_4__","react_share__WEBPACK_IMPORTED_MODULE_5__","react_share__WEBPACK_IMPORTED_MODULE_6__","react_share__WEBPACK_IMPORTED_MODULE_7__","react_share__WEBPACK_IMPORTED_MODULE_8__","react_share__WEBPACK_IMPORTED_MODULE_9__","react_share__WEBPACK_IMPORTED_MODULE_10__","quote","react_share__WEBPACK_IMPORTED_MODULE_11__","react_share__WEBPACK_IMPORTED_MODULE_12__","react_share__WEBPACK_IMPORTED_MODULE_13__","react_share__WEBPACK_IMPORTED_MODULE_14__","react_share__WEBPACK_IMPORTED_MODULE_15__","react_share__WEBPACK_IMPORTED_MODULE_16__","react_share__WEBPACK_IMPORTED_MODULE_17__","$export","__webpack_require__","P","bind","aFunction","isObject","invoke","arraySlice","slice","factories","Function","that","fn","partArgs","call","arguments","bound","args","concat","F","len","n","i","join","construct","length","prototype","Object","defineProperty","value","_extends","assign","target","source","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","DISQUS_CONFIG","__disqusAdded","copyProps","context","onNewComment","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","loadDisqus","nextProps","nextState","identifier","_this2","reduce","memo","some","_defineProperty","child","disqus","document","parent","getElementsByTagName","async","src","shortname","appendChild","_this3","forEach","DISQUS","reset","reload","replace","window","disqus_config","addDisqusScript","displayName","propTypes","string","isRequired","func","defaultProps","location","href"],"mappings":"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","file":"component---src-templates-post-jsx-e813f6bd3cece20ebdbf.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDisqusComments from \"react-disqus-comments\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toasts: []\n    };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts;\n    this.setState({ toasts });\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice();\n    toasts.push({ text: \"New comment available!\" });\n    this.setState({ toasts });\n  }\n  render() {\n    const { postNode } = this.props;\n    if (!config.disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const url = urljoin(\n      config.siteUrl,\n      config.pathPrefix,\n      postNode.fields.slug\n    );\n    return (\n      <ReactDisqusComments\n        shortname={config.disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={url}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    );\n  }\n}\n\nexport default Disqus;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport UserInfo from \"../components/UserInfo/UserInfo\";\nimport Disqus from \"../components/Disqus/Disqus\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport SocialLinks from \"../components/SocialLinks/SocialLinks\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport \"./b16-tomorrow-dark.css\";\nimport \"./post.css\";\n\nexport default class PostTemplate extends React.Component {\n  render() {\n    const { slug } = this.props.pageContext;\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <div>\n            <h1>{post.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n            <div className=\"post-meta\">\n              <PostTags tags={post.tags} />\n              <SocialLinks postPath={slug} postNode={postNode} />\n            </div>\n            <UserInfo config={config} />\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover {\n          publicURL\n        }\n        date\n        category\n        tags\n      }\n    }\n  }\n`;\n","module.exports = {\n  siteTitle: \"Gatsby Advanced Starter\", // Site title.\n  siteTitleShort: \"GA Starter\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"GatsbyJS Advanced Starter\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://vagr9k.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/gatsby-advanced-starter\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"A GatsbyJS stater with Advanced design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-47311644-5\", // GA tracking ID.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"Advanced User\", // Username to display in the author segment.\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/Vagr9K/gatsby-advanced-starter\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/Vagr9K\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:vagr9k@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright © 2017. Advanced User\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.css\";\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div className=\"root-layout\">\n        <Helmet>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover.publicURL;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React, { Component } from \"react\";\nimport { Follow } from \"react-twitter-widgets\";\n\nclass UserInfo extends Component {\n  render() {\n    const { userTwitter } = this.props.config;\n    const { expanded } = this.props;\n    return (\n      <Follow\n        username={userTwitter}\n        options={{ count: expanded ? true : \"none\" }}\n      />\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <button>{tag}</button>\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  RedditShareButton,\n  FacebookShareCount,\n  GooglePlusShareCount,\n  LinkedinShareCount,\n  RedditShareCount,\n  FacebookIcon,\n  TwitterIcon,\n  TelegramIcon,\n  GooglePlusIcon,\n  LinkedinIcon,\n  RedditIcon\n} from \"react-share\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.css\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    const post = postNode.frontmatter;\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : \"\");\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <div className=\"social-links\">\n        <RedditShareButton url={url} title={post.title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => renderShareCount(count)}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <GooglePlusShareButton url={url}>\n          <GooglePlusIcon round size={iconSize} />\n          <GooglePlusShareCount url={url}>\n            {count => renderShareCount(count)}\n          </GooglePlusShareCount>\n        </GooglePlusShareButton>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={post.title}\n          description={postNode.excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => renderShareCount(count)}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;\n","// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', { bind: require('./_bind') });\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n","'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n    var onNewComment = props.onNewComment,\n        language = props.language,\n        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n    for (var prop in rest) {\n        context.page[prop] = rest[prop];\n    }\n\n    // Setting the language - if none is provided, the default one is used\n    context.language = language;\n\n    if (onNewComment) {\n        context.callbacks = {\n            onNewComment: [onNewComment]\n        };\n    }\n}\n\nvar DisqusThread = function (_React$Component) {\n    _inherits(DisqusThread, _React$Component);\n\n    function DisqusThread() {\n        _classCallCheck(this, DisqusThread);\n\n        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n    }\n\n    _createClass(DisqusThread, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            return nextProps.identifier !== this.props.identifier;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var props = Object.keys(this.props).reduce(function (memo, key) {\n                return DISQUS_CONFIG.some(function (config) {\n                    return config === key;\n                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n            }, {});\n\n            return _react2.default.createElement(\n                'div',\n                props,\n                _react2.default.createElement('div', { id: 'disqus_thread' })\n            );\n        }\n    }, {\n        key: 'addDisqusScript',\n        value: function addDisqusScript() {\n            if (__disqusAdded) {\n                return;\n            }\n\n            var child = this.disqus = document.createElement('script');\n            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n            child.async = true;\n            child.type = 'text/javascript';\n            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n            parent.appendChild(child);\n            __disqusAdded = true;\n        }\n    }, {\n        key: 'loadDisqus',\n        value: function loadDisqus() {\n            var _this3 = this;\n\n            var props = {};\n\n            // Extract Disqus props that were supplied to this component\n            DISQUS_CONFIG.forEach(function (prop) {\n                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n                if (prop !== 'shortname' && !!_this3.props[prop]) {\n                    props[prop] = _this3.props[prop];\n                }\n            });\n\n            // If Disqus has already been added, reset it\n            if (typeof DISQUS !== 'undefined') {\n                DISQUS.reset({\n                    reload: true,\n                    config: function config() {\n                        copyProps(this, props);\n\n                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n                    }\n                });\n            } else {\n                // Otherwise add Disqus to the page\n                window.disqus_config = function () {\n                    copyProps(this, props);\n                };\n                this.addDisqusScript();\n            }\n        }\n    }]);\n\n    return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\n\nDisqusThread.propTypes = {\n    id: _propTypes2.default.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _propTypes2.default.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _propTypes2.default.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _propTypes2.default.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _propTypes2.default.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _propTypes2.default.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _propTypes2.default.func,\n\n    /**\n     * `language` tells the Disqus service which language should be used.\n     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n     * If undefined, English is used as default one\n     */\n    language: _propTypes2.default.string\n};\n\nDisqusThread.defaultProps = {\n    url: typeof window === 'undefined' ? null : window.location.href\n};\n\nexports.default = DisqusThread;"],"sourceRoot":""}