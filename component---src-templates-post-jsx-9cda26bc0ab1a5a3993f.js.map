{"version":3,"sources":["webpack:///./src/components/UserInfo/UserInfo.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/SocialLinks/SocialLinks.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/layout/index.jsx","webpack:///./src/components/SEO/SEO.jsx"],"names":["UserInfo","render","userTwitter","this","props","config","expanded","react_default","a","createElement","dist","username","options","count","Component","PostTags","tags","className","map","tag","gatsby_browser_entry","key","style","textDecoration","to","kebabCase_default","SocialLinks","_this$props","postNode","postPath","mobile","post","frontmatter","url","urljoin","siteUrl","pathPrefix","iconSize","renderShareCount","filter","RedditShareButton","title","RedditIcon","round","size","RedditShareCount","TwitterShareButton","TwitterIcon","GooglePlusShareButton","GooglePlusIcon","GooglePlusShareCount","FacebookShareButton","quote","excerpt","FacebookIcon","FacebookShareCount","LinkedinShareButton","description","LinkedinIcon","LinkedinShareCount","TelegramShareButton","TelegramIcon","PostTemplate","slug","pageContext","data","markdownRemark","id","category_id","postDefaultCategoryID","layout","Helmet_default","siteTitle","SEO","postSEO","gatsby_image_default","fluid","cover","childImageSharp","dangerouslySetInnerHTML","__html","html","components_PostTags_PostTags","components_SocialLinks_SocialLinks","components_UserInfo_UserInfo","React","pageQuery","module","exports","siteTitleShort","siteTitleAlt","siteLogo","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","dateFromFormat","dateFormat","userName","userLocation","userAvatar","userDescription","userLinks","label","iconClassName","copyright","themeColor","backgroundColor","MainLayout","children","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","name","content","image","postURL","postMeta","publicURL","blogURL","schemaOrgJSONLD","@context","@type","alternateName","push","itemListElement","position","item","@id","headline","type","JSON","stringify","property"],"mappings":"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","file":"component---src-templates-post-jsx-9cda26bc0ab1a5a3993f.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Follow } from \"react-twitter-widgets\";\n\nclass UserInfo extends Component {\n  render() {\n    const { userTwitter } = this.props.config;\n    const { expanded } = this.props;\n    return (\n      <Follow\n        username={userTwitter}\n        options={{ count: expanded ? true : \"none\" }}\n      />\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <button>{tag}</button>\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  RedditShareButton,\n  FacebookShareCount,\n  GooglePlusShareCount,\n  LinkedinShareCount,\n  RedditShareCount,\n  FacebookIcon,\n  TwitterIcon,\n  TelegramIcon,\n  GooglePlusIcon,\n  LinkedinIcon,\n  RedditIcon\n} from \"react-share\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.css\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    const post = postNode.frontmatter;\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : \"\");\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <div className=\"social-links\">\n        <RedditShareButton url={url} title={post.title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => renderShareCount(count)}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <GooglePlusShareButton url={url}>\n          <GooglePlusIcon round size={iconSize} />\n          <GooglePlusShareCount url={url}>\n            {count => renderShareCount(count)}\n          </GooglePlusShareCount>\n        </GooglePlusShareButton>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={post.title}\n          description={postNode.excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => renderShareCount(count)}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport Img from \"gatsby-image\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport UserInfo from \"../components/UserInfo/UserInfo\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport SocialLinks from \"../components/SocialLinks/SocialLinks\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport \"./b16-tomorrow-dark.css\";\nimport \"./post.css\";\n\nexport default class PostTemplate extends React.Component {\n  render() {\n    const { slug } = this.props.pageContext;\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <div className=\"post\">\n            <Img fluid={post.cover.childImageSharp.fluid} />\n            <h1>{post.title}</h1>\n            <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: postNode.html }} />\n            <div className=\"post-meta\">\n              <PostTags tags={post.tags} />\n              <SocialLinks postPath={slug} postNode={postNode} />\n            </div>\n            <UserInfo config={config} />\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover {\n          publicURL\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        date\n        category\n        tags\n      }\n      fields {\n        nextTitle\n        nextSlug\n        prevTitle\n        prevSlug\n        slug\n        date\n      }\n    }\n  }\n`;\n","module.exports = {\n  siteTitle: \"Gatsby Advanced Starter\", // Site title.\n  siteTitleShort: \"GA Starter\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"GatsbyJS Advanced Starter\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://vagr9k.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/gatsby-advanced-starter\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"A GatsbyJS stater with Advanced design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-47311644-5\", // GA tracking ID.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"Advanced User\", // Username to display in the author segment.\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/Vagr9K/gatsby-advanced-starter\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/Vagr9K\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:vagr9k@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright © 2017. Advanced User\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.css\";\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div className=\"root-layout\">\n        <Helmet>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover.publicURL;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}